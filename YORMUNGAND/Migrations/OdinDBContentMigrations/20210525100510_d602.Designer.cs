// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YORMUNGAND.Data;

namespace YORMUNGAND.Migrations.OdinDBContentMigrations
{
    [DbContext(typeof(OdinDBContent))]
    [Migration("20210525100510_d602")]
    partial class d602
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MachineProcessChild", b =>
                {
                    b.Property<int>("ProcessChildrenListid")
                        .HasColumnType("int");

                    b.Property<int>("machineListid")
                        .HasColumnType("int");

                    b.HasKey("ProcessChildrenListid", "machineListid");

                    b.HasIndex("machineListid");

                    b.ToTable("MachineProcessChild");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.DefaultQueueProcesses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("paramDay")
                        .HasColumnType("int");

                    b.Property<int?>("processChildid")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("timeSpanStart")
                        .HasColumnType("time");

                    b.Property<string>("typeOfSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("processChildid");

                    b.ToTable("DefaultQueueProcesses");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.Machine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("machineName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.Process", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("BPprocessid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsible")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Process");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Process");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.QueueProcessLog", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EndProcessTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Machineid")
                        .HasColumnType("int");

                    b.Property<int?>("QueueProcessesid")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartProcessTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartRequestTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isSuccess")
                        .HasColumnType("bit");

                    b.Property<bool>("needRestart")
                        .HasColumnType("bit");

                    b.Property<int?>("restartableProcessid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Machineid");

                    b.HasIndex("QueueProcessesid");

                    b.HasIndex("restartableProcessid");

                    b.ToTable("QueueProcessLog");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.QueueProcesses", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isWorked")
                        .HasColumnType("bit");

                    b.Property<int>("minCountMachines")
                        .HasColumnType("int");

                    b.Property<DateTime>("needStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<int?>("processChildIdid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("processChildIdid");

                    b.ToTable("QueueProcesses");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.SchedulerProcess", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("processChildIdid")
                        .HasColumnType("int");

                    b.Property<DateTime>("timeStart")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("processChildIdid");

                    b.ToTable("SchedulerProcess");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.ProcessChild", b =>
                {
                    b.HasBaseType("YORMUNGAND.Data.Models.ODIN.Process");

                    b.Property<int>("maxCountMachines")
                        .HasColumnType("int");

                    b.Property<int>("minCountMachines")
                        .HasColumnType("int");

                    b.Property<int>("priority")
                        .HasColumnType("int");

                    b.Property<int?>("processIdid")
                        .HasColumnType("int");

                    b.Property<string>("startParams")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("processIdid");

                    b.HasDiscriminator().HasValue("ProcessChild");
                });

            modelBuilder.Entity("MachineProcessChild", b =>
                {
                    b.HasOne("YORMUNGAND.Data.Models.ODIN.ProcessChild", null)
                        .WithMany()
                        .HasForeignKey("ProcessChildrenListid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YORMUNGAND.Data.Models.ODIN.Machine", null)
                        .WithMany()
                        .HasForeignKey("machineListid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.DefaultQueueProcesses", b =>
                {
                    b.HasOne("YORMUNGAND.Data.Models.ODIN.ProcessChild", "processChild")
                        .WithMany("DefaultQueueProcessesList")
                        .HasForeignKey("processChildid");

                    b.Navigation("processChild");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.QueueProcessLog", b =>
                {
                    b.HasOne("YORMUNGAND.Data.Models.ODIN.Machine", "Machine")
                        .WithMany("QueueProcessLogsList")
                        .HasForeignKey("Machineid");

                    b.HasOne("YORMUNGAND.Data.Models.ODIN.QueueProcesses", null)
                        .WithMany("queueProcessLogsList")
                        .HasForeignKey("QueueProcessesid");

                    b.HasOne("YORMUNGAND.Data.Models.ODIN.ProcessChild", "restartableProcess")
                        .WithMany("QueueProcessLogList")
                        .HasForeignKey("restartableProcessid");

                    b.Navigation("Machine");

                    b.Navigation("restartableProcess");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.QueueProcesses", b =>
                {
                    b.HasOne("YORMUNGAND.Data.Models.ODIN.ProcessChild", "processChildId")
                        .WithMany("QueueProcessesList")
                        .HasForeignKey("processChildIdid");

                    b.Navigation("processChildId");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.SchedulerProcess", b =>
                {
                    b.HasOne("YORMUNGAND.Data.Models.ODIN.ProcessChild", "processChildId")
                        .WithMany("SchedulerProcessesList")
                        .HasForeignKey("processChildIdid");

                    b.Navigation("processChildId");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.ProcessChild", b =>
                {
                    b.HasOne("YORMUNGAND.Data.Models.ODIN.Process", "processId")
                        .WithMany("ProcessChildrenList")
                        .HasForeignKey("processIdid");

                    b.Navigation("processId");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.Machine", b =>
                {
                    b.Navigation("QueueProcessLogsList");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.Process", b =>
                {
                    b.Navigation("ProcessChildrenList");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.QueueProcesses", b =>
                {
                    b.Navigation("queueProcessLogsList");
                });

            modelBuilder.Entity("YORMUNGAND.Data.Models.ODIN.ProcessChild", b =>
                {
                    b.Navigation("DefaultQueueProcessesList");

                    b.Navigation("QueueProcessesList");

                    b.Navigation("QueueProcessLogList");

                    b.Navigation("SchedulerProcessesList");
                });
#pragma warning restore 612, 618
        }
    }
}
